import org.ajoberstar.gradle.git.tasks.*

apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'java'

version = '0.1'

def jboss = "../jboss-eap-6.1/standalone/deployments"

buildscript {
  	repositories { mavenCentral() }
  	dependencies { classpath 'org.ajoberstar:gradle-git:0.4.0' }
}
	
repositories {
    mavenCentral()
    maven {
        url "http://download.java.net/maven/2"
    }
}

dependencies {
    providedCompile group: 'org.hibernate', name: 'hibernate-core', version: '4.2.0.Final'
    providedCompile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.2.0.Final'
    
    providedCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.2.9'
    
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.5' 
    
    compile group: 'org.scribe', name: 'scribe', version: '1.3.5'
    
    compile group: 'commons-codec', name: 'commons-codec', version: '1.8'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.3'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    
    //compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.2.5'
    
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'com.google.guava', name: 'guava', version: '14.0.1'
    
    providedCompile group: 'org.jboss.spec', name: 'jboss-javaee-6.0', version: '1.0.0.Final'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}

//filter files
/*war {
   eachFile {
      if (it.name == 'index.html') {
        it.filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ['servicesMode' : '-mock'])
      }
   }
}*/

//unzip
//task development {
//  ant.unzip(src: war.archivePath, dest: jboss + '/food-spot-0.1.war/')
//}

task openshift { 
	task clone(type: GitClone)
	clone {
		uri = 'ssh://51f854e64382eccba8000028@foodspot-miked.rhcloud.com/~/git/foodspot.git/'
		destinationPath = buildDir.name + '/openshift'
	}
	task copyDeployment(type: Copy)
	copyDeployment {
		from war.archivePath
		into buildDir.name + '/openshift/deployments'
	}
	task addDeployment(type: GitAdd)
	addDeployment {
		repoPath = buildDir.name + '/openshift'
	}
	task commitDeployment(type: GitCommit)
	commitDeployment {
		message "openshift deployment"
		commitAll true
	}
	task pushDeployment(type: GitPush)
	pushDeployment {
		remote "orign"
	}
	clone.execute()
	println "copying"
	copyDeployment.execute()
	println "adding"
	addDeployment.execute()
	println "commiting"
	commitDeployment.execute()
	println "pushing"
	pushDeployment.execute()
}

